{"ast":null,"code":"var _jsxFileName = \"/Users/alisonqiu/wordle/wordle_client/src/components/Keyboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useContext, useEffect } from \"react\";\nimport { AppContext } from \"../App\";\nimport Grid from '@mui/material/Grid';\nimport Key from \"./Key\";\nimport pinkBg from \"../../src/images/pinkbg.jpg\";\nimport { height } from \"@mui/system\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst line1 = [\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"];\nconst line2 = [\"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"];\nconst line3 = [\"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"];\nexport default function Keyboard() {\n  _s();\n\n  const {\n    onSelectLetter,\n    onDeleteLetter,\n    onEnterLetter,\n    guessedLetters\n  } = useContext(AppContext); //handle when user enters the letters through keyboard\n  //use useCallback to prevent unnecesarry updating \n\n  const handleKeyboard = useCallback(event => {\n    //event tells me what letter is entered\n    if (event.key === \"Enter\") {\n      onEnterLetter();\n    } else if (event.key === \"Backspace\") {\n      onDeleteLetter();\n    } else {\n      //loop through every key in line 1,2,3 to check if the pressed\n      //key equals one of them\n      line1.forEach(key => {\n        if (event.key.toUpperCase() === key.toUpperCase()) {\n          onSelectLetter(key);\n        }\n      });\n      line2.forEach(key => {\n        if (event.key.toUpperCase() === key.toUpperCase()) {\n          onSelectLetter(key);\n        }\n      });\n      line3.forEach(key => {\n        if (event.key.toUpperCase() === key.toUpperCase()) {\n          onSelectLetter(key);\n        }\n      });\n    }\n  });\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyboard); //remove event listener after we're done\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyboard);\n    };\n  }, [handleKeyboard]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: \"key-container\",\n    onKeyDown: handleKeyboard,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      className: \"line1\",\n      children: line1.map(key => {\n        return /*#__PURE__*/_jsxDEV(Key, {\n          keyVal: key,\n          guessed: guessedLetters.includes(key)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      className: \"line2\",\n      children: line2.map(key => {\n        return /*#__PURE__*/_jsxDEV(Key, {\n          keyVal: key,\n          guessed: guessedLetters.includes(key)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      className: \"line3\",\n      children: [/*#__PURE__*/_jsxDEV(Key, {\n        keyVal: \"ENTER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), line3.map(key => {\n        return /*#__PURE__*/_jsxDEV(Key, {\n          keyVal: key,\n          guessed: guessedLetters.includes(key)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 24\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Key, {\n        keyVal: \"DELETE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Keyboard, \"NGXml4SZmIAofa6LkSKhLWiffAc=\");\n\n_c = Keyboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Keyboard\");","map":{"version":3,"names":["React","useCallback","useContext","useEffect","AppContext","Grid","Key","pinkBg","height","line1","line2","line3","Keyboard","onSelectLetter","onDeleteLetter","onEnterLetter","guessedLetters","handleKeyboard","event","key","forEach","toUpperCase","document","addEventListener","removeEventListener","map","includes"],"sources":["/Users/alisonqiu/wordle/wordle_client/src/components/Keyboard.js"],"sourcesContent":["import React, { useCallback, useContext,useEffect } from \"react\"\nimport { AppContext } from \"../App\";\nimport Grid from '@mui/material/Grid';\nimport Key from \"./Key\";\nimport pinkBg from \"../../src/images/pinkbg.jpg\"\nimport { height } from \"@mui/system\";\n\nconst line1 = [\"Q\", \"W\", \"E\", \"R\", \"T\", \"Y\", \"U\", \"I\", \"O\", \"P\"];\nconst line2 = [\"A\", \"S\", \"D\", \"F\", \"G\", \"H\", \"J\", \"K\", \"L\"];\nconst line3 = [\"Z\", \"X\", \"C\", \"V\", \"B\", \"N\", \"M\"];\n\nexport default function Keyboard() {\n    const{onSelectLetter, onDeleteLetter, onEnterLetter,guessedLetters} = useContext(AppContext)\n\n    //handle when user enters the letters through keyboard\n    //use useCallback to prevent unnecesarry updating \n    const handleKeyboard = useCallback((event)=>{\n        //event tells me what letter is entered\n        if (event.key === \"Enter\"){\n            onEnterLetter()\n        }else if (event.key === \"Backspace\"){\n            onDeleteLetter()\n        }else{\n            //loop through every key in line 1,2,3 to check if the pressed\n            //key equals one of them\n            line1.forEach((key) => {\n                if(event.key.toUpperCase() === key.toUpperCase()){\n                    onSelectLetter(key)\n                }\n            })\n            line2.forEach((key) => {\n                if(event.key.toUpperCase() === key.toUpperCase()){\n                    onSelectLetter(key)\n                }\n            })\n            line3.forEach((key) => {\n                if(event.key.toUpperCase() === key.toUpperCase()){\n                    onSelectLetter(key)\n                }\n            })\n        }\n    })\n\n    useEffect(()=>{\n        document.addEventListener(\"keydown\",handleKeyboard)\n        //remove event listener after we're done\n        return ()=>{\n            document.removeEventListener(\"keydown\",handleKeyboard)\n        }\n    },[handleKeyboard])\n\n      \n    return (\n        <Grid  className=\"key-container\" onKeyDown={handleKeyboard}>\n            <Grid className=\"line1\">\n                {line1.map((key) => {\n                    return <Key keyVal={key} guessed={guessedLetters.includes(key)}/>;\n                })}\n            </Grid>\n            <Grid className=\"line2\">\n                {line2.map((key) => {\n                    return <Key keyVal={key} guessed={guessedLetters.includes(key)}/>;\n                })}\n            </Grid>\n      \n            <Grid className=\"line3\">\n                <Key keyVal={\"ENTER\"} />\n                {line3.map((key) => {\n                return <Key keyVal={key} guessed={guessedLetters.includes(key)}/>;\n                })}\n                <Key keyVal={\"DELETE\"} />\n            </Grid>\n        </Grid>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}